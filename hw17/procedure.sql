DROP PROCEDURE IF EXISTS generate_data;

DELIMITER //

CREATE PROCEDURE generate_data()
BEGIN

    START TRANSACTION;

    DELETE FROM prices WHERE id > 0;
    ALTER TABLE prices AUTO_INCREMENT = 1;
    DELETE FROM product_category WHERE id > 0;
    ALTER TABLE product_category AUTO_INCREMENT = 1;
    DELETE FROM products WHERE id > 0;
    ALTER TABLE products AUTO_INCREMENT = 1;  
    

    INSERT INTO products(title, description, characteristics, producer_id, supplier_id)
    SELECT 
        CONCAT('title ', (a.n - 1) * 10000 + (b.n - 1) * 1000 + (c.n - 1) * 100 + (d.n - 1) * 10 + e.n) AS title,
        CONCAT('description ', (a.n - 1) * 10000 + (b.n - 1) * 1000 + (c.n - 1) * 100 + (d.n - 1) * 10 + e.n) AS description,
        '{"display": "OLED"}' AS characteristics,
        ROUND(RAND() * 7 + 1) AS producer_id,
        ROUND(RAND() * 4 + 1) AS supplier_id
    FROM 
        (SELECT 1 n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 
         UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) a,
        (SELECT 1 n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 
         UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) b,
        (SELECT 1 n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 
         UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) c,
        (SELECT 1 n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 
         UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) d,
        (SELECT 1 n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 
         UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) e
    LIMIT 100000;

    INSERT INTO product_category(product_id, category_id)
    SELECT 
        (a.n - 1) * 10000 + (b.n - 1) * 1000 + (c.n - 1) * 100 + (d.n - 1) * 10 + e.n AS product_id,
        ROUND(RAND() * 6 + 1) AS category_id
    FROM 
        (SELECT 1 n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 
         UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) a,
        (SELECT 1 n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 
         UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) b,
        (SELECT 1 n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 
         UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) c,
        (SELECT 1 n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 
         UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) d,
        (SELECT 1 n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 
         UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) e
    LIMIT 100000;

    INSERT INTO prices(product_id, value, start_date)
    SELECT 
        (a.n - 1) * 10000 + (b.n - 1) * 1000 + (c.n - 1) * 100 + (d.n - 1) * 10 + e.n AS product_id,
        ROUND(10000 + 10000 * RAND()) AS value,
        TIMESTAMPADD(SECOND, FLOOR(RAND() * 2500000), NOW() - INTERVAL 1 YEAR) AS start_date
    FROM 
        (SELECT 1 n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 
         UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) a,
        (SELECT 1 n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 
         UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) b,
        (SELECT 1 n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 
         UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) c,
        (SELECT 1 n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 
         UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) d,
        (SELECT 1 n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 
         UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10) e
    LIMIT 100000;

    COMMIT;
    
    SELECT 'Генерация данных завершена';
END //

DELIMITER ;